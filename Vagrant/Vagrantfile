# -*- mode: ruby -*-
# vi: set ft=ruby :
require 'pathname'

vm_name = "gimp_pk_card_creator"
root_sync_dir = Pathname.new("/home/vagrant/gimp_pk_card_creator")
etc_sync_dir = root_sync_dir.join("Etc")
local_install_sh = etc_sync_dir.join("install_plugin.sh")
local_test_sh = etc_sync_dir.join("test_plugin.sh")

unless ENV.key?("REPO_ROOT") then
  raise "Expected REPO_ROOT in env vars : #{ENV.to_h}"
else
  src_sync_dir = Pathname.new(ENV["REPO_ROOT"])
end

# https://docs.vagrantup.com.
Vagrant.configure("2") do |config|

  # https://app.vagrantup.com/ubuntu/boxes/bionic64
  config.vm.box = "ubuntu/bionic64"
  config.ssh.forward_x11 = true
  config.vm.define vm_name

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # https://www.vagrantup.com/docs/synced-folders/basic_usage#disabling
  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.synced_folder "#{src_sync_dir}", "#{root_sync_dir}", type: "rsync",
    rsync__auto: false,
    rsync__exclude: [".git", "Vagrant"]

  # https://www.vagrantup.com/docs/providers/virtualbox/configuration
  # vboxmanage --help | less
  config.vm.provider "virtualbox" do |vb|
    vb.name = "gimp_pk_card_creator"
    vb.memory = "4096"
    vb.cpus = "2"
    vb.customize ["modifyvm", :id, "--graphicscontroller", "none"]
  end
  
  # Enable provisioning with a shell script.
  # old versions of `runuser` cannot use `--whitelist-environment`
  # old versions of `sudo` cannot use `--chdir`
  config.vm.provision "shell", inline: <<-SHELL
    apt-get update
    apt-get install -y gimp gimp-data-extras

    test -d "#{root_sync_dir}"
    export REPO_ROOT="#{root_sync_dir}"
    run_as_user() {
      local rc=0
      pushd "#{root_sync_dir}" &> /dev/null || return 1
      sudo --set-home --preserve-env=PWD,REPO_ROOT --user=vagrant -- "$@" || rc=1
      popd &> /dev/null
      return "$rc"
    }

    # Needed to init gimp home folders
    run_as_user gimp-console -b "(gimp-quit 0)" &> "`mktemp -t gimp_init.XXXXXX.log`"
    run_as_user bash -- "#{local_install_sh}" -c
    run_as_user bash -- "#{local_test_sh}"
  SHELL
end
